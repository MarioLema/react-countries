{"version":3,"sources":["navbar.js","homepage.js","filter.js","detailPage.js","pageloader.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","style","this","props","currentTheme","react_default","a","createElement","background","elements","color","onClick","changeTheme","className","theme","Component","HomeSection","countries","state","displayedCountries","countriesArray","i","length","push","homepage_CountryCard","detailMethod","country","key","numericCode","listCountries","CountryCard","alphacode","alpha3Code","backgroundImage","concat","flag","name","population","region","capital","SearchingSection","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","regionMenuClasses","toggleMenu","bind","assertThisInitialized","classes","toConsumableArray","indexOf","pop","setState","_this2","onChange","filterInput","maxLength","type","id","placeholder","join","filterRegion","DetailSection","currencyString","currenciesArray","detailCountry","currencies","languageString","languagesArray","languages","neighbours","borders","allCountries","neighArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","returnMethod","src","alt","nativeName","subregion","topLevelDomain","currencyList","languagesList","neighboursButtons","CurrentPage","currentPage","Fragment","filter","homepage","detailPage","axios","require","DARK","LIGHT","App","filteredCountries","displayDetail","returnToHome","bottomScroll","window","removeEventListener","addEventListener","get","then","response","data","slice","catch","error","console","log","event","target","classList","contains","attributes","closest","index","input","RegExp","test","alpha2Code","altSpellings","lan","translations","document","body","clientHeight","innerHeight","pageY","newDisplayed","nextDisplay","navbar","pageloader","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09c1035f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass NavBar extends Component {\r\n  render() {\r\n    let style = this.props.style.currentTheme;\r\n    return (\r\n      <nav style={{ background: style.elements, color: style.color }}>\r\n        <div>\r\n          <h1>Where in the World?</h1>\r\n          <button\r\n            onClick={this.props.changeTheme}\r\n            style={{ color: style.color }}\r\n          >\r\n            <i className=\"fas fa-moon\" /> {this.props.style.theme}\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HomeSection extends Component {\r\n  //GENERATES AN ARRAY OF CARD ELEMENTS FROM THE DISPLAY ARRAY\r\n  listCountries() {\r\n    let countries = this.props.state.displayedCountries;\r\n    let countriesArray = [];\r\n    for (let i = 0; i < countries.length; i++) {\r\n      countriesArray.push(\r\n        <CountryCard\r\n          detailMethod={this.props.detailMethod}\r\n          country={countries[i]}\r\n          key={countries[i].numericCode}\r\n          style={this.props.state.currentTheme}\r\n        />\r\n      );\r\n    }\r\n    return countriesArray;\r\n  }\r\n  render() {\r\n    return <section className=\"country-list\">{this.listCountries()}</section>;\r\n  }\r\n}\r\n\r\n//INDIVIDUAL COUNTRY CARD CLASS\r\nclass CountryCard extends Component {\r\n  render() {\r\n    let country = this.props.country;\r\n    let style = this.props.style;\r\n    return (\r\n      <div\r\n        className=\"country-card\"\r\n        onClick={this.props.detailMethod}\r\n        alphacode={country.alpha3Code}\r\n        style={{ background: style.background, color: style.color }}\r\n      >\r\n        <div style={{ backgroundImage: `url(${country.flag})` }} />\r\n        <h1>{country.name}</h1>\r\n        <ul>\r\n          <li>\r\n            <b>Population:</b> {country.population}\r\n          </li>\r\n          <li>\r\n            <b>Region:</b> {country.region}\r\n          </li>\r\n          <li>\r\n            <b>Capital:</b> {country.capital}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeSection;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      regionMenuClasses: [`custom-options`]\r\n    };\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n  }\r\n\r\n  //REVEALS OR HIDES THE REGION FILTERING METHOD\r\n  toggleMenu() {\r\n    let classes = [...this.state.regionMenuClasses];\r\n    if (classes.indexOf(`revealed`) === -1) {\r\n      classes.push(`revealed`);\r\n    } else {\r\n      classes.pop(`revealed`);\r\n    }\r\n    this.setState({\r\n      regionMenuClasses: classes\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let style = this.props.style;\r\n    return (\r\n      <section className=\"search-options\">\r\n        <div\r\n          className=\"search-box\"\r\n          style={{ background: style.elements, color: style.color }}\r\n        >\r\n          <i className=\"fas fa-search\" />\r\n          <input\r\n            onChange={this.props.filterInput}\r\n            maxLength=\"20\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"search-input\"\r\n            placeholder=\"Search for a country...\"\r\n            style={{ color: style.color }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"custom-select\"\r\n          style={{ background: style.elements, color: style.color }}\r\n          onClick={this.toggleMenu}\r\n        >\r\n          <p>{this.props.region}</p>\r\n          <i className=\"fas fa-chevron-down\" />\r\n          <ul\r\n            className={this.state.regionMenuClasses.join(` `)}\r\n            style={{ background: style.elements, color: style.color }}\r\n          >\r\n            <li onClick={() => this.props.filterRegion(`All`)}>All</li>\r\n            <li onClick={() => this.props.filterRegion(`Africa`)}>Africa</li>\r\n            <li onClick={() => this.props.filterRegion(`Americas`)}>\r\n              Americas\r\n            </li>\r\n            <li onClick={() => this.props.filterRegion(`Asia`)}>Asia</li>\r\n            <li onClick={() => this.props.filterRegion(`Europe`)}>Europe</li>\r\n            <li onClick={() => this.props.filterRegion(`Oceania`)}>Oceania</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default SearchingSection;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DetailSection extends Component {\r\n  //RETURNS A STRING WITH THE CURRENCIES OF THE COUNTRY\r\n  currencyList() {\r\n    let currencyString = [];\r\n\r\n    let currenciesArray = this.props.state.detailCountry.currencies;\r\n    for (let i = 0; i < currenciesArray.length; i++) {\r\n      currencyString.push(currenciesArray[i].name);\r\n    }\r\n    return currencyString.join(`, `);\r\n  }\r\n\r\n  //RETURNS A STRING WITH THE LANGUAGES OF THE COUNTRY\r\n  languagesList() {\r\n    let languageString = [];\r\n    let languagesArray = this.props.state.detailCountry.languages;\r\n    for (let i = 0; i < languagesArray.length; i++) {\r\n      languageString.push(languagesArray[i].name);\r\n    }\r\n    return languageString.join(`, `);\r\n  }\r\n\r\n  //RETURNS AN ARRAY OF BUTTONS THAT CAN BE CLICKED TO ACCESS THE NEIGHBOUR COUNTRIES\r\n  neighboursButtons() {\r\n    let neighbours = this.props.state.detailCountry.borders;\r\n    let countries = this.props.state.allCountries;\r\n    let style = this.props.state.currentTheme;\r\n    let neighArray = [];\r\n    for (let i = 0; i < neighbours.length; i++) {\r\n      for (let country of countries) {\r\n        if (country.alpha3Code === neighbours[i])\r\n          neighArray.push(\r\n            <button\r\n              className=\"mini-button\"\r\n              alphacode={country.alpha3Code}\r\n              onClick={this.props.detailMethod}\r\n              key={country.alpha3Code}\r\n              style={{ background: style.background, color: style.color }}\r\n            >\r\n              {country.name}\r\n            </button>\r\n          );\r\n      }\r\n    }\r\n    return neighArray;\r\n  }\r\n\r\n  render() {\r\n    let country = this.props.state.detailCountry;\r\n    let style = this.props.state.currentTheme;\r\n    return (\r\n      <section className=\"country-detail-container\">\r\n        <button\r\n          className=\"mini-button return-button\"\r\n          onClick={this.props.returnMethod}\r\n          style={{ background: style.background, color: style.color }}\r\n        >\r\n          <i className=\"fas fa-long-arrow-alt-left\" /> Back\r\n        </button>\r\n        <div className=\"country-details\">\r\n          <img src={country.flag} alt=\"\" />\r\n\r\n          <div style={{ color: style.color }}>\r\n            <h2>{country.name}</h2>\r\n            <div className=\"info-container\">\r\n              <ul>\r\n                <li>\r\n                  <b>Native Name:</b> {country.nativeName}\r\n                </li>\r\n                <li>\r\n                  <b>Population:</b> {country.population}\r\n                </li>\r\n                <li>\r\n                  <b>Region:</b> {country.region}\r\n                </li>\r\n                <li>\r\n                  <b>Subregion:</b> {country.subregion}\r\n                </li>\r\n                <li>\r\n                  <b>Capital:</b> {country.capital}\r\n                </li>\r\n              </ul>\r\n\r\n              <ul>\r\n                <li>\r\n                  <b>Top Level Domain:</b> {country.topLevelDomain}\r\n                </li>\r\n                <li>\r\n                  <b>Currencies:</b> {this.currencyList()}\r\n                </li>\r\n                <li>\r\n                  <b>Languages:</b> {this.languagesList()}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h3>Border Countries:</h3>\r\n              <div className=\"border-container\">{this.neighboursButtons()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailSection;\r\n","//IMPORT REACT\r\nimport React, { Component } from \"react\";\r\n\r\n//IMPORT COMPONENTS\r\nimport HomeSection from \"./homepage\";\r\nimport SearchingSection from \"./filter\";\r\nimport DetailSection from \"./detailPage\";\r\n\r\nclass CurrentPage extends Component {\r\n  render() {\r\n    if (this.props.state.currentPage === `home`) {\r\n      return (\r\n        <React.Fragment>\r\n          <SearchingSection\r\n            region={this.props.state.region}\r\n            style={this.props.state.currentTheme}\r\n            filterInput={this.props.filterInput}\r\n            filterRegion={this.props.filterRegion}\r\n          />\r\n          <HomeSection\r\n            state={this.props.state}\r\n            detailMethod={this.props.detailMethod}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <DetailSection\r\n          state={this.props.state}\r\n          detailMethod={this.props.detailMethod}\r\n          returnMethod={this.props.returnMethod}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CurrentPage;\r\n","//REACT IMPORT\nimport React, { Component } from \"react\";\n\n//COMPONENTS IMPORTS\nimport NavBar from \"./navbar\";\nimport CurrentPage from \"./pageloader\";\n\n//STYLING IMPORTS\nimport \"./App.css\";\n\n//AXIOS\nconst axios = require(\"axios\");\n\n//COLOR THEME VARIABLES\nconst DARK = {\n  background: `hsl(207, 26%, 17%)`,\n  color: `hsl(0, 0%, 100%)`,\n  elements: `hsl(209, 23%, 22%)`\n};\nconst LIGHT = {\n  background: `hsl(0, 0%, 98%)`,\n  color: `hsl(200, 15%, 8%)`,\n  elements: `hsl(0, 0%, 100%)`\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTheme: DARK,\n      theme: `Dark Mode`,\n      allCountries: [],\n      displayedCountries: [],\n      filteredCountries: [],\n      detailCountry: {\n        flag: ``,\n        name: ``,\n        nativeName: ``,\n        population: ``,\n        region: ``,\n        subregion: ``,\n        capital: ``,\n        topLevelDomain: ``,\n        currencies: [],\n        languages: []\n      },\n      currentPage: `home`,\n      region: `Filter by Region`\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n    this.displayDetail = this.displayDetail.bind(this);\n    this.returnToHome = this.returnToHome.bind(this);\n    this.filterInput = this.filterInput.bind(this);\n    this.filterRegion = this.filterRegion.bind(this);\n    this.bottomScroll = this.bottomScroll.bind(this);\n  }\n\n  //CHANGES THE COLOR THEME OF THE PAGE\n  changeTheme() {\n    if (this.state.currentTheme === DARK) {\n      this.setState({\n        currentTheme: LIGHT,\n        theme: `Light Mode`\n      });\n    } else {\n      this.setState({\n        currentTheme: DARK,\n        theme: `Dark Mode`\n      });\n    }\n  }\n\n  //REMOVES THE SCROLL EVENT LISTENER\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.bottomScroll);\n  }\n  //MAKES AN API REQUEST WHEN THE COMPONENT IS LOADED / ADDS A SCROLL LISTENER\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.bottomScroll);\n    axios\n      .get(`https://restcountries.eu/rest/v2/all`)\n      .then(\n        function(response) {\n          this.setState({\n            allCountries: response.data,\n            filteredCountries: response.data,\n            displayedCountries: response.data.slice(0, 11)\n          });\n        }.bind(this)\n      )\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  //DISPLAYS THE DETAIL PAGE BASED ON THE ALPHACODE OF THE CLICK EVENT\n  displayDetail(event) {\n    let alphacode;\n    if (event.target.classList.contains(`mini-button`)) {\n      alphacode = event.target.attributes.alphacode.value;\n    } else {\n      alphacode = event.target.closest(`.country-card`).attributes.alphacode\n        .value;\n    }\n    let index = null;\n    let i = 0;\n    while (index === null && i < this.state.allCountries.length) {\n      if (this.state.allCountries[i].alpha3Code === alphacode) index = i;\n      i++;\n    }\n    this.setState({\n      detailCountry: this.state.allCountries[index],\n      currentPage: `detailPage`\n    });\n  }\n\n  //SETS THE VIEW BACK TO THE HOMEPAGE\n  returnToHome() {\n    this.setState({ currentPage: `home` });\n  }\n\n  //FILTERS COUNTRIES BY INPUT\n  filterInput(event) {\n    let input = new RegExp(event.target.value, \"i\");\n    let filteredCountries = this.state.allCountries.filter(function(country) {\n      //check values in different properties of the object\n      if (input.length === 2 && input.test(country.alpha2Code)) return true;\n      if (input.length === 3 && input.test(country.alpha3Code)) return true;\n      if (input.length === 3 && input.test(country.numericCode)) return true;\n      if (input.test(country.name)) return true;\n      if (input.test(country.nativeName)) return true;\n      for (let i = 0; i < country.altSpellings.length; i++) {\n        if (input.test(country.altSpellings[i])) return true;\n      }\n      for (let lan in country.translations) {\n        if (input.test(country.translations[lan])) return true;\n      }\n      return false;\n    });\n    let displayedCountries =\n      filteredCountries.length > 11\n        ? filteredCountries.slice(0, 11)\n        : filteredCountries;\n    this.setState({\n      filteredCountries: filteredCountries,\n      displayedCountries: displayedCountries\n    });\n  }\n\n  //FILTERS COUNTRIES DEPENDING ON THE REGION PASSED AS ARGUMENT\n  filterRegion(region) {\n    if (region === `All`) {\n      this.setState({\n        displayedCountries: this.state.allCountries.slice(0, 11),\n        filteredCountries: this.state.allCountries,\n        region: region\n      });\n    } else {\n      let filteredCountries = this.state.allCountries.filter(\n        country => country.region === region\n      );\n      let displayedCountries =\n        filteredCountries.length > 11\n          ? filteredCountries.slice(0, 11)\n          : filteredCountries;\n      this.setState({\n        displayedCountries: displayedCountries,\n        filteredCountries: filteredCountries,\n        region: region\n      });\n    }\n  }\n\n  //IF THE BOTTOM OF THE PAGE IS REACHED, CONCAT MORE COUNTRIES TO DISPLAY ARRAY\n  bottomScroll(event) {\n    let domHeight = document.body.clientHeight - window.innerHeight;\n    if (\n      domHeight === event.pageY &&\n      this.state.displayedCountries.length !==\n        this.state.filteredCountries.length\n    ) {\n      let newDisplayed = [...this.state.displayedCountries];\n      let nextDisplay = this.state.filteredCountries.slice(\n        newDisplayed.length,\n        newDisplayed.length + 11\n      );\n      this.setState({\n        displayedCountries: [...newDisplayed, ...nextDisplay]\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        style={{ background: this.state.currentTheme.background }}\n      >\n        <NavBar style={this.state} changeTheme={this.changeTheme} />\n        <CurrentPage\n          state={this.state}\n          detailMethod={this.displayDetail}\n          returnMethod={this.returnToHome}\n          filterInput={this.filterInput}\n          filterRegion={this.filterRegion}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}